description <http://ua.be/sdo2l/description/artifacts/operations#> as ops {
	uses <http://ua.be/sdo2l/vocabulary/federation#> as fed

	extends <http://ua.be/sdo2l/description/artifacts/FTG_ftg#> as FTG_ftg

	instance outlier : fed:Operation [
		fed:hasEndPoint "http://localhost:8000"
		fed:hasDescription "Given a column with numbers, it returns the cells whose values are outliers compared to the other cells."
		fed:hasCall "outlier"
		fed:isOperationOf FTG_ftg:f_TabularData
	]
	
	instance outlierFile : fed:Parameter [
		fed:hasIndex 0
		fed:hasName "file"
		fed:hasType "String"
		fed:isParameterOf outlier
	]
	
	instance outlierColumn : fed:Parameter [
		fed:hasIndex 1
		fed:hasName "col"
		fed:hasType "String"
		fed:isParameterOf outlier
	]
	
	instance outlierArtifactIRI : fed:Parameter [
		fed:hasIndex 2
		fed:hasName "artifactIRI"
		fed:hasType "String"
		fed:isParameterOf outlier
	]
	
	instance get_cell : fed:Operation [
		fed:hasEndPoint "http://localhost:8000"
		fed:hasDescription "Given a column and a row indexes , it returns the corresponding cell."
		fed:hasCall "cell"
//		fed:hasParameter get_cell_file
//		fed:hasParameter get_cell_column
//		fed:hasParameter get_cell_row
//		fed:hasParameter get_cell_artifactIRI 
		fed:isOperationOf FTG_ftg:f_TabularData
	]
	
	instance get_cell_file : fed:Parameter [
		fed:hasIndex 0
		fed:hasName "file"
		fed:hasType "String"
		fed:isParameterOf get_cell
	]
	
	instance get_cell_column : fed:Parameter [
		fed:hasIndex 1
		fed:hasName "col"
		fed:hasType "String"
		fed:isParameterOf get_cell
	]
	
	instance get_cell_row : fed:Parameter [
		fed:hasIndex 2
		fed:hasName "row"
		fed:hasType "String"
		fed:isParameterOf get_cell
	]
	
	instance get_cell_artifactIRI : fed:Parameter [
		fed:hasIndex 3
		fed:hasName "artifactIRI"
		fed:hasType "String"
		fed:isParameterOf get_cell
	]
	
	
	
}